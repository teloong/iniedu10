---
import Layout from '../layouts/Layout.astro';
import AdminSidebar from '../components/AdminSidebar.astro';
---
  <div class="min-h-screen bg-gray-50 flex">
    <div class="sticky top-0 h-screen hidden md:block">
      <AdminSidebar active="blog" />
    </div>
    <main class="flex-1 overflow-x-auto">
      <div class="max-w-4xl mx-auto px-4 py-8">
        
        <div class="bg-white rounded-xl shadow p-6 mb-8">
          <form id="blog-form" class="flex flex-col gap-4">
            <div id="blog-success-alert" class="hidden text-green-600 font-semibold mb-2"></div>
            <input type="text" id="blog-title" class="border rounded p-2" placeholder="Judul Blog" required />
            <textarea id="blog-content" class="border rounded p-2 min-h-[120px]" placeholder="Isi Blog" required></textarea>
            <input type="text" id="blog-author" class="border rounded p-2" placeholder="Penulis" required />
            <input type="url" id="blog-image" class="border rounded p-2" placeholder="URL Gambar (opsional)" />
            <input type="text" id="blog-source" class="border rounded p-2" placeholder="Sumber (opsional, misal: Kompas.com)" />
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 rounded transition-all">Tambah Blog</button>
          </form>
        </div>
        
      </div>
    </main>
  </div>

<script type="module">
  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
  const supabaseUrl = 'https://jcfizceoycwdvpqpwhrj.supabase.co';
  const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpjZml6Y2VveWN3ZHZwcXB3aHJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1NzUzNzUsImV4cCI6MjA2NDE1MTM3NX0.Au9FzSYvpaX7SkaVrgJvIgK9fZu5Dq4cU_NI5iwY6aA';
  const supabase = createClient(supabaseUrl, supabaseKey);
  (async () => {
    const { data: { session } } = await supabase.auth.getSession();
    if (!session || session.user.email !== "lemindes@gmail.com") {
      window.location.href = "/admin-login";
    }
  })();


// Tidak perlu renderBlogs dan event handler blog-list di halaman ini
let editingId = null;
async function handleSubmit(e) {
  e.preventDefault();
  const title = document.getElementById('blog-title').value.trim();
  const content = document.getElementById('blog-content').value.trim();
  const author = document.getElementById('blog-author').value.trim();
  const image = document.getElementById('blog-image').value.trim();
  const source = document.getElementById('blog-source').value.trim();
  if (!title || !content || !author) return;
  const alertBox = document.getElementById('blog-success-alert');
  if (window.editingBlogId) {
    // update blog
    const { error } = await supabase.from('blog').update({ title, content, author, image, source }).eq('id', window.editingBlogId);
    if (error) {
      alert('Gagal update blog: ' + error.message);
      return;
    }
    alertBox.textContent = 'Artikel berhasil diubah!';
    alertBox.classList.remove('hidden');
  } else {
    // tambah baru
    const { error } = await supabase.from('blog').insert([{ title, content, author, image, source }]);
    if (error) {
      alert('Gagal tambah blog: ' + error.message);
      return;
    }
    alertBox.textContent = 'Artikel berhasil ditambah!';
    alertBox.classList.remove('hidden');
    document.getElementById('blog-form').reset();
  }
}

document.getElementById('blog-form').onsubmit = handleSubmit;

// Prefill form jika mode edit
const params = new URLSearchParams(window.location.search);
const editId = params.get('edit');
if (editId) {
  (async () => {
    const { data, error } = await supabase.from('blog').select('*').eq('id', editId).single();
    if (!error && data) {
      document.getElementById('blog-title').value = data.title || '';
      document.getElementById('blog-content').value = data.content || '';
      document.getElementById('blog-author').value = data.author || '';
      document.getElementById('blog-image').value = data.image || '';
      document.getElementById('blog-source').value = data.source || '';
      document.getElementById('form-title').textContent = 'Edit Blog';
      // Simpan id yang sedang diedit
      window.editingBlogId = editId;
    }
  })();
}

// Sembunyikan alert jika user mulai mengetik lagi
['blog-title','blog-content','blog-author','blog-image','blog-source'].forEach(id => {
  document.getElementById(id).addEventListener('input', () => {
    document.getElementById('blog-success-alert').classList.add('hidden');
  });
});

</script>
