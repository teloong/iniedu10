---
import Layout from '../layouts/Layout.astro';
import AdminSidebar from '../components/AdminSidebar.astro';
import '../styles/global.css';
---
<Layout title="Blog"></Layout>
  <div class="min-h-screen bg-gray-50 flex">
    <div class="sticky top-0 h-screen hidden md:block">
      <AdminSidebar active="blog" />
    </div>
    <main class="flex-1 overflow-x-auto">
      <div class="max-w-4xl mx-auto px-4 py-8">
        
        <div class="bg-white rounded-xl shadow p-6 mb-8">
          <form id="blog-form" class="flex flex-col gap-4">
            <div id="blog-success-alert" class="hidden text-green-600 font-semibold mb-2"></div>
            <input type="text" id="blog-title" class="border rounded p-2" placeholder="Judul Blog" required />
            <textarea id="blog-content" class="border rounded p-2 min-h-[120px]" placeholder="Isi Blog" required></textarea>
            <input type="text" id="blog-author" class="border rounded p-2" placeholder="Penulis" required />
            <input type="url" id="blog-image" class="border rounded p-2" placeholder="URL Gambar (opsional)" />
            <input type="text" id="blog-source" class="border rounded p-2" placeholder="Sumber (opsional, misal: Kompas.com)" />
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 rounded transition-all">Tambah Blog</button>
          </form>
        </div>
        
      </div>
    </main>
  </div>
</Layout>

<script type="module">
  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
  const supabaseUrl = 'https://jcfizceoycwdvpqpwhrj.supabase.co';
  const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpjZml6Y2VveWN3ZHZwcXB3aHJqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1NzUzNzUsImV4cCI6MjA2NDE1MTM3NX0.Au9FzSYvpaX7SkaVrgJvIgK9fZu5Dq4cU_NI5iwY6aA';
  const supabase = createClient(supabaseUrl, supabaseKey);
  const edgeUrl = 'https://jcfizceoycwdvpqpwhrj.functions.supabase.co/insert_blog'; // Ganti jika endpoint berubah

  let editingId = null;

  (async () => {
    const { data: { session } } = await supabase.auth.getSession();
    if (!session || session.user.email !== "lemindes@gmail.com") {
      window.location.href = "/admin-login";
      return;
    }

    // Prefill form jika mode edit
    const params = new URLSearchParams(window.location.search);
    editingId = params.get('edit');
    if (editingId) {
      const { data, error } = await supabase.from('blog').select('*').eq('id', editingId).single();
      if (!error && data) {
        document.getElementById('blog-title').value = data.title || '';
        document.getElementById('blog-content').value = data.content || '';
        document.getElementById('blog-author').value = data.author || '';
        document.getElementById('blog-image').value = data.image || '';
        document.getElementById('blog-source').value = data.source || '';
        document.getElementById('form-title').textContent = 'Edit Blog';
      }
    }

    // Submit handler
    document.getElementById('blog-form').onsubmit = async function(e) {
      e.preventDefault();
      const title = document.getElementById('blog-title').value.trim();
      const content = document.getElementById('blog-content').value.trim();
      const author = document.getElementById('blog-author').value.trim();
      const image = document.getElementById('blog-image').value.trim();
      const source = document.getElementById('blog-source').value.trim();
      const alertBox = document.getElementById('blog-success-alert');
      alertBox.classList.add('hidden');
      if (!title || !content || !author) {
        alertBox.textContent = 'Judul, penulis, dan isi blog wajib diisi';
        alertBox.classList.remove('hidden');
        alertBox.classList.add('text-red-600');
        return;
      }
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        alertBox.textContent = 'Session login admin tidak ditemukan!';
        alertBox.classList.remove('hidden');
        alertBox.classList.add('text-red-600');
        return;
      }
      let method = editingId ? 'PUT' : 'POST';
      let payload = editingId ? { id: editingId, title, content, author, image, source } : { title, content, author, image, source };
      const res = await fetch(edgeUrl, {
        method,
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`
        },
        body: JSON.stringify(payload)
      });
      const result = await res.json();
      if (res.ok) {
        alertBox.textContent = editingId ? 'Artikel berhasil diubah!' : 'Artikel berhasil ditambah!';
        alertBox.classList.remove('hidden');
        alertBox.classList.remove('text-red-600');
        alertBox.classList.add('text-green-600');
        if (!editingId) document.getElementById('blog-form').reset();
      } else {
        alertBox.textContent = result.error || 'Gagal menyimpan blog';
        alertBox.classList.remove('hidden');
        alertBox.classList.remove('text-green-600');
        alertBox.classList.add('text-red-600');
      }
    };

    // Sembunyikan alert jika user mulai mengetik lagi
    ['blog-title','blog-content','blog-author','blog-image','blog-source'].forEach(id => {
      document.getElementById(id).addEventListener('input', () => {
        document.getElementById('blog-success-alert').classList.add('hidden');
      });
    });
  })();
</script>
