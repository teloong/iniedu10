---
import AdminLayout from "../layouts/AdminLayout.astro";
import AdminSidebar from "../components/AdminSidebar.astro";
import "../styles/global.css";
---

<AdminLayout title="Edit Ebook">
  <div class="min-h-screen bg-gray-50 flex">
    <div class="sticky top-0 h-screen hidden md:block">
      <AdminSidebar active="daftar-ebook" />
    </div>
    <main class="flex-1 overflow-x-auto">
      <div class="max-w-2xl mx-auto px-4 py-8">
        <h1 class="text-2xl font-bold text-blue-700 mb-6">Edit E-Book</h1>
        <form id="edit-ebook-form" class="space-y-4">
          <input type="hidden" id="id" name="id" />
          <div>
            <label for="title" class="block mb-1 font-semibold">Judul</label>
            <input
              type="text"
              id="title"
              name="title"
              class="w-full border rounded px-3 py-2"
              required
            />
          </div>
          <div>
            <label for="author" class="block mb-1 font-semibold">Penulis</label>
            <input
              type="text"
              id="author"
              name="author"
              class="w-full border rounded px-3 py-2"
            />
          </div>
          <div>
            <label for="tahun" class="block mb-1 font-semibold">Tahun</label>
            <input
              type="number"
              id="tahun"
              name="tahun"
              class="w-full border rounded px-3 py-2"
            />
          </div>
          <div>
            <label for="penerbit" class="block mb-1 font-semibold"
              >Penerbit</label
            >
            <input
              type="text"
              id="penerbit"
              name="penerbit"
              class="w-full border rounded px-3 py-2"
            />
          </div>
          <div>
            <label for="description" class="block mb-1 font-semibold"
              >Deskripsi</label
            >
            <textarea
              id="description"
              name="description"
              class="w-full border rounded px-3 py-2"></textarea>
          </div>
          <div>
            <label for="file_url" class="block mb-1 font-semibold"
              >File URL (e.g., PDF link)</label
            >
            <input
              type="url"
              id="file_url"
              name="file_url"
              class="w-full border rounded px-3 py-2"
            />
          </div>
          <div>
            <label for="cover_image_url" class="block mb-1 font-semibold">Cover Image</label>
            <img id="cover-preview" src="" alt="Preview" class="mt-2 w-32 h-auto hidden rounded shadow-sm"/>
            <input type="url" id="cover_image_url" name="cover_image_url" class="w-full border rounded px-3 py-2 mt-2" placeholder="Atau masukkan URL manual" />
            <input type="file" id="cover_image_file" accept="image/*" class="w-full border rounded px-3 py-2 mt-2" />
            <small class="text-xs text-gray-500">Pilih file untuk diunggah, atau isi URL manual di atas.</small>
          </div>
          <div>
            <label for="category_id" class="block mb-1 font-semibold"
              >Kategori</label
            >
            <select
              id="category_id"
              name="category_id"
              class="w-full border rounded px-3 py-2"
              required></select>
          </div>
          <div>
            <label for="tema_id" class="block mb-1 font-semibold">Tema</label>
            <select
              id="tema_id"
              name="tema_id"
              class="w-full border rounded px-3 py-2"></select>
          </div>
          <button
            type="submit"
            class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 rounded"
            >Simpan Perubahan</button
          >
        </form>
        <div id="edit-status" class="mt-4"></div>
      </div>
    </main>
  </div>
  <script is:inline>
    const CLOUDINARY_CLOUD_NAME = "dr8gr1uy1";
    const CLOUDINARY_UNSIGNED_PRESET = "foto-penulis";

    const editForm = document.getElementById("edit-ebook-form");
    const statusDiv = document.getElementById("edit-status");
    const categorySelect = document.getElementById("category_id");
    const themeSelect = document.getElementById("tema_id");
    const coverPreview = document.getElementById('cover-preview');

    function getQueryId() {
      const url = new URL(window.location.href);
      return url.searchParams.get("id");
    }

    function populateForm(book) {
      for (const key in book) {
        const input = document.getElementById(key);
        if (input && typeof input.value !== 'undefined') {
          input.value = book[key] || "";
        }
      }
      if (book.cover_image_url && coverPreview) {
        coverPreview.src = book.cover_image_url;
        coverPreview.classList.remove('hidden');
      }
    }

    function populateCategories(categories, selectedId) {
      if (!categorySelect) return;
      categorySelect.innerHTML = categories
        .map(cat => `<option value="${cat.id}" ${cat.id == selectedId ? 'selected' : ''}>${cat.name}</option>`)
        .join('');
    }

    function populateThemes(themes, selectedId) {
      if (!themeSelect) return;
      themeSelect.innerHTML = '<option value="">-- Pilih Tema --</option>';
      themeSelect.innerHTML += themes
        .map(theme => `<option value="${theme.id}" ${theme.id == selectedId ? 'selected' : ''}>${theme.name}</option>`)
        .join('');
    }
    
    async function handleFileUpload(event) {
      const file = event.target.files[0];
      if (!file || !coverPreview) return;

      coverPreview.src = URL.createObjectURL(file);
      coverPreview.classList.remove('hidden');

      const formData = new FormData();
      formData.append("file", file);
      formData.append("upload_preset", CLOUDINARY_UNSIGNED_PRESET);
      
      const urlInput = document.getElementById('cover_image_url');
      urlInput.placeholder = "Mengunggah...";

      try {
        const res = await fetch(`https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`, {
          method: "POST",
          body: formData,
        });
        const data = await res.json();
        if (data.secure_url) {
          urlInput.value = data.secure_url;
          alert("Unggah sampul berhasil!");
        } else {
          throw new Error(data.error?.message || 'Unknown Cloudinary error');
        }
      } catch (error) {
        alert(`Unggah gagal: ${error.message}`);
        urlInput.placeholder = "Atau masukkan URL manual";
      }
    }

    async function loadInitialData() {
      if (!editForm || !statusDiv) return;
      const id = getQueryId();
      if (!id) {
        statusDiv.innerHTML = '<span class="text-red-500">ID e-book tidak valid.</span>';
        editForm.style.display = "none";
        return;
      }

      try {
        // Fetch all dropdown data and the specific book data
        const [mainDataResponse, bookDataResponse] = await Promise.all([
          fetch('https://iniedu.id/api/admin/ebook_handler.php'), // Gets categories & themes
          fetch(`https://iniedu.id/api/admin/ebook_handler.php?id=${id}`) // Gets the specific book
        ]);

        if (!mainDataResponse.ok) throw new Error('Gagal memuat data dropdown.');
        if (!bookDataResponse.ok) throw new Error('Gagal memuat data e-book.');

        const mainData = await mainDataResponse.json();
        const bookData = await bookDataResponse.json();

        if (!mainData.success || !bookData.success) {
          throw new Error(mainData.message || bookData.message || 'Data tidak valid.');
        }

        // Populate dropdowns with full lists, and select the book's current values
        populateCategories(mainData.categories || [], bookData.book.category_id);
        populateThemes(mainData.themes || [], bookData.book.tema_id);
        populateForm(bookData.book);

      } catch (error) {
        statusDiv.innerHTML = `<span class="text-red-500">Error: ${error.message}</span>`;
        editForm.style.display = "none";
      }
    }

    async function handleFormSubmit(e) {
        e.preventDefault();
        if (!statusDiv) return;

        statusDiv.innerHTML = '<span class="text-blue-500">Menyimpan...</span>';

        const formData = new FormData(editForm);
        const data = Object.fromEntries(formData.entries());

        try {
          const response = await fetch("https://iniedu.id/api/admin/ebook_handler.php", {
              method: "POST", // Backend handles PUT via POST with id
              headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${localStorage.getItem("adminAuthToken")}`,
              },
              body: JSON.stringify(data),
            }
          );

          const result = await response.json();
          if (!result.success) throw new Error(result.message || "Gagal menyimpan perubahan.");

          statusDiv.innerHTML = '<span class="text-green-600">Perubahan berhasil disimpan! Mengalihkan...</span>';
          setTimeout(() => { window.location.href = "/admin-daftar-ebook"; }, 1500);

        } catch (error) {
          statusDiv.innerHTML = `<span class="text-red-500">Gagal menyimpan: ${error.message}</span>`;
        }
    }

    document.addEventListener("DOMContentLoaded", loadInitialData);
    document.getElementById('cover_image_file').addEventListener('change', handleFileUpload);
    editForm.addEventListener("submit", handleFormSubmit);

  </script>
</AdminLayout>
