---
import Layout from "../layouts/Layout.astro";
---

<script is:inline>
  // --- START PAGE PROTECTION ---
  // Memastikan hanya pengguna yang sudah login yang bisa mengakses halaman ini.
  (async () => {
    try {
      const response = await fetch("https://iniedu.id/get_user_session.php", {
        credentials: "include",
      });
      if (!response.ok) {
        throw new Error("Sesi tidak ditemukan, mengalihkan ke halaman login.");
      }
      const userData = await response.json();
      if (!userData || !userData.user_id) {
        throw new Error("Data sesi tidak valid, mengalihkan ke halaman login.");
      }
      // Jika semua pemeriksaan lolos, pengguna terautentikasi dan bisa melihat halaman.
    } catch (error) {
      window.location.href = "/login?redirect=/perpustakaan"; // Arahkan ke login jika gagal
    }
  })();
  // --- END PAGE PROTECTION ---
</script>

<Layout title="Perpustakaan">
  <section
    class="relative min-h-[50vh] flex flex-col items-center justify-center py-16 px-4 bg-gradient-to-br from-blue-50 via-white to-blue-100 overflow-hidden"
    data-aos="fade-up"
  >
    <h1
      class="text-4xl md:text-5xl font-extrabold mb-4 text-[#232b4d] drop-shadow-lg"
      data-aos="fade-right"
    >
      Perpustakaan Digital
    </h1>
    <p
      class="mb-10 text-lg md:text-xl text-gray-700 text-center max-w-2xl"
      data-aos="fade-left"
    >
      Akses ribuan koleksi buku digital untuk semua kebutuhan belajar,
      referensi, dan hiburan anak. Semua gratis dan mudah diakses!
    </p>

    <!-- Container ini akan diisi secara dinamis dengan data dari database -->
    <div
      id="kategori-container"
      class="grid md:grid-cols-1 lg:grid-cols-3 gap-8 w-full max-w-5xl"
    >
      <!-- Pesan ini akan hilang setelah data berhasil dimuat -->
      <p class="col-span-full text-center text-gray-500">Memuat kategori...</p>
    </div>
  </section>

  <script is:inline>
    // Skrip ini akan mengambil data kategori dari API dan membangun kartu-kartu secara dinamis.
    document.addEventListener("DOMContentLoaded", async () => {
      const container = document.getElementById("kategori-container");
      if (!container) return;

      try {
        // Menghubungi endpoint API yang telah kita buat
        const response = await fetch(
          "https://iniedu.id/api/get_ebook_categories.php"
        );
        const result = await response.json();

        if (result.success && result.data.length > 0) {
          container.innerHTML = ""; // Kosongkan pesan "Memuat..."

          // Definisi tema warna untuk setiap kategori agar konsisten
          const colors = {
            "buku-sekolah": {
              border: "blue-400",
              hoverBorder: "blue-500",
              text: "blue-700",
              gradientFrom: "blue-500",
              gradientTo: "cyan-400",
            },
            "buku-islam": {
              border: "green-400",
              hoverBorder: "green-500",
              text: "green-700",
              gradientFrom: "green-500",
              gradientTo: "emerald-400",
            },
            "buku-anak": {
              border: "pink-400",
              hoverBorder: "pink-500",
              text: "pink-700",
              gradientFrom: "pink-500",
              gradientTo: "purple-400",
            },
          };

          // Loop melalui setiap kategori dari database dan buat kartu HTML-nya
          result.data.forEach((kategori, index) => {
            const colorTheme = colors[kategori.slug] || colors["buku-sekolah"]; // Fallback ke tema default

            // Membuat daftar fitur untuk setiap kartu
            const featuresHTML = kategori.features
              .map(
                (feature) => `
              <li class="flex items-start gap-2">
                <svg class="w-5 h-5 text-green-500 mt-1 flex-shrink-0" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                <span>${feature}</span>
              </li>
            `
              )
              .join("");

            // Template HTML untuk satu kartu kategori
            const cardHTML = `
              <div class="bg-white rounded-2xl shadow-xl p-8 flex flex-col items-center transition-all duration-300 border-b-4 border-${colorTheme.border} hover:scale-105 hover:shadow-2xl hover:border-b-[6px] hover:border-${colorTheme.hoverBorder}" data-aos="zoom-in" data-aos-delay="${(index + 1) * 100}">
                <div class="icon-card w-16 h-16 mb-4">
                  <img src="${kategori.icon_path}" alt="${kategori.name}" class="w-full h-full object-contain" />
                </div>
                <div class="font-bold text-xl h-14 flex items-center justify-center text-center text-${colorTheme.text}">${kategori.name}</div>
                <ul class="mb-4 text-base text-gray-700 text-left space-y-2">
                  ${featuresHTML}
                </ul>
                <a href="/perpustakaan/${kategori.slug}" class="mt-auto px-5 py-2 rounded-full font-semibold bg-gradient-to-r from-${colorTheme.gradientFrom} to-${colorTheme.gradientTo} text-white shadow-md transition-all duration-200 hover:scale-105 hover:shadow-xl focus:outline-none focus:ring-4">
                  Baca Sekarang
                </a>
              </div>
            `;
            // Masukkan kartu yang sudah jadi ke dalam container
            container.insertAdjacentHTML("beforeend", cardHTML);
          });
        } else {
          // Tampilkan pesan jika tidak ada data atau terjadi error
          container.innerHTML =
            '<p class="col-span-full text-center text-red-500">Gagal memuat kategori: ' +
            (result.message || "Tidak ada data.") +
            "</p>";
        }
      } catch (error) {
        container.innerHTML =
          '<p class="col-span-full text-center text-red-500">Terjadi kesalahan saat menghubungi server.</p>';
      }
    });
  </script>
</Layout>
