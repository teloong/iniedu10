---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Koleksi Buku Anak Digital">
  <section class="max-w-7xl mx-auto py-12 px-6">
    <h1
      class="text-3xl md:text-4xl font-extrabold text-pink-700 mb-4 text-center"
    >
      Koleksi Buku Anak Digital
    </h1>
    <p class="text-lg text-gray-700 mb-10 text-center max-w-2xl mx-auto">
      Cerita anak, buku edukasi, dan komik digital untuk menumbuhkan minat baca
      sejak dini. Semua koleksi dapat diakses gratis dan legal untuk anak-anak
      Indonesia.
    </p>
    <input
      id="ebook-search"
      type="text"
      placeholder="Cari e-book..."
      class="block w-full max-w-md mx-auto mb-8 px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-pink-400"
    />
    <div id="theme-filter" class="flex flex-wrap justify-center mb-8"></div>
    <div
      class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-10"
      id="ebook-anak-list"
    >
      <!-- Buku akan tampil di sini secara dinamis dari Supabase -->
    </div>
    <script type="module">
      const grid = document.getElementById("ebook-anak-list");
      const themeFilter = document.getElementById("theme-filter");
      let allBooks = [];
      let allThemes = [];
      let selectedThemeId = null;

      async function fetchAndRenderAnakBooks() {
        try {
          const response = await fetch(
            `https://iniedu.id/get_ebooks.php?kategori=anak`
          );
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const data = await response.json();

          if (data.error) {
            throw new Error(data.error);
          }

          allThemes = data.themes || [];
          allBooks = data.books || [];

          renderThemes(allThemes);

          if (allBooks.length === 0) {
            grid.innerHTML =
              '<div class="col-span-5 text-center text-gray-400">Belum ada buku dalam kategori ini.</div>';
            return;
          }

          renderBooks(allBooks);
        } catch (error) {

          grid.innerHTML = `<div class="col-span-5 text-center text-red-500">Gagal memuat buku. ${error.message}</div>`;
        }
      }

      function renderThemes(themes) {
        themeFilter.innerHTML = "";
        if (!themes || themes.length === 0) return;
        themeFilter.innerHTML = themes
          .map(
            (t) =>
              `<button data-id="${t.id}" class="tema-btn px-4 py-2 rounded-full border border-pink-400 bg-white text-pink-700 font-semibold shadow hover:bg-pink-50 transition ${selectedThemeId == t.id ? "ring-2 ring-pink-400" : ""}">${t.name}</button>`
          )
          .join("");
      }

      function renderBooks(books) {
        grid.innerHTML = "";
        books.forEach((buku) => {
          const div = document.createElement("div");
          div.className =
            "bg-white rounded-xl shadow p-4 flex flex-col items-center min-w-[240px] h-full";
          div.innerHTML = `
            <img src="${buku.cover_image_url || "/default-cover.png"}" alt="Cover Buku" class="w-32 h-44 object-cover rounded mb-2" />
            <div class="font-bold mt-2 text-center">${buku.title}</div>
            <div class="text-sm text-gray-500 mb-1">${buku.author}${buku.tahun ? ", " + buku.tahun : ""}</div>
            ${buku.penerbit ? `<div class='text-xs text-gray-400 mb-1'>Penerbit: ${buku.penerbit}</div>` : ""}
            ${buku.description ? `<div class='text-xs text-gray-500 mb-2 italic'>${buku.description}</div>` : ""}
            <a href="${buku.file_url}" target="_blank" class="px-4 py-2 bg-pink-600 text-white rounded-full font-semibold mt-auto">Baca Sekarang</a>
          `;
          grid.appendChild(div);
        });
      }

      fetchAndRenderAnakBooks();

      // Filter by tema
      themeFilter.addEventListener("click", (e) => {
        if (e.target.classList.contains("tema-btn")) {
          const id = e.target.getAttribute("data-id");
          selectedThemeId = selectedThemeId == id ? null : id;
          renderThemes(allThemes);

          const booksToRender = selectedThemeId
            ? allBooks.filter((b) => b.tema_id == selectedThemeId)
            : allBooks;

          renderBooks(booksToRender);
        }
      });

      // Real-time search
      const searchInput = document.getElementById("ebook-search");
      if (searchInput) {
        searchInput.addEventListener("input", () => {
          const q = searchInput.value.trim().toLowerCase();
          const filtered = allBooks.filter(
            (buku) =>
              (buku.title && buku.title.toLowerCase().includes(q)) ||
              (buku.author && buku.author.toLowerCase().includes(q)) ||
              (buku.penerbit && buku.penerbit.toLowerCase().includes(q)) ||
              (buku.description && buku.description.toLowerCase().includes(q)) ||
              (buku.tahun && String(buku.tahun).toLowerCase().includes(q))
          );
          renderBooks(filtered);
        });
      }
    </script>
    <div class="text-center text-sm text-gray-500 mt-10">
      * Semua buku diambil dari sumber legal dan dapat diakses secara gratis.
    </div>
  </section>
</Layout>
