---
import AdminLayout from "../layouts/AdminLayout.astro";
import AdminSidebar from "../components/AdminSidebar.astro";
import '../styles/global.css';
---
<AdminLayout title="Daftar Video">
<!-- Proteksi login (hanya jalan di browser) -->


  <div class="min-h-screen bg-gray-50 flex">
    <div class="sticky top-0 h-screen hidden md:block">
      <AdminSidebar active="daftar-video" />
    </div>
    <main class="flex-1 overflow-x-auto">
      <div class="max-w-5xl mx-auto px-4 py-8">
        
        <div
          id="video-success-alert"
          class="hidden text-green-600 font-semibold mb-4"
        >
        </div>
        <div class="mb-4 flex items-center gap-2">
          <input id="search-input" type="text" placeholder="Cari judul, kelas, mapel..." class="border rounded px-3 py-2 w-full max-w-xs focus:outline-none focus:ring focus:border-blue-300" />
        </div>
        <div class="bg-white rounded-xl shadow p-6">
          <table class="min-w-full divide-y divide-gray-200">
            <thead>
              <tr class="bg-gray-100">
                <th class="px-4 py-2 text-left">Judul</th>
                <th class="px-4 py-2 text-left">Kelas</th>
                <th class="px-4 py-2 text-left">Mapel</th>
                <th class="px-4 py-2 text-left">Kursus</th>
                <th class="px-4 py-2 text-left">URL</th>
                <th class="px-4 py-2 text-left">Aksi</th>
              </tr>
            </thead>
            <tbody id="video-list"></tbody>
          </table>
          <div id="pagination" class="flex justify-center items-center gap-2 mt-4"></div>
        </div>
      </div>
    </main>
  </div>
</AdminLayout>
<script type="module">
  // Proteksi akses admin
(async () => {
  const token = localStorage.getItem('adminAuthToken');
  // (Opsional) Anda bisa tambahkan validasi JWT di sini jika ingin
  if (!token) window.location.href = "/admin-login";
})();

// Simpan data hasil fetch untuk kebutuhan filter
let allVideos = [];

// Pagination state
let currentPage = 1;
const pageSize = 20;
let filteredVideos = null;

// Fetch videos dari backend PHP
async function fetchVideos() {
  const token = localStorage.getItem('adminAuthToken');
  const res = await fetch('https://iniedu.id/admin-video.php', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ action: 'fetch' })
  });
  const data = await res.json();
  if (data.success && Array.isArray(data.videos)) {
    return { data: data.videos, error: null };
  } else {
    return { data: [], error: data.message || 'Gagal memuat data video.' };
  }
}

function renderVideos(filtered = null, page = 1) {
    const tbody = document.getElementById("video-list");
    const videos = filtered !== null ? filtered : (filteredVideos !== null ? filteredVideos : allVideos);
    const total = videos.length;
    const totalPages = Math.ceil(total / pageSize);
    currentPage = Math.max(1, Math.min(page, totalPages));
    const start = (currentPage - 1) * pageSize;
    const end = start + pageSize;
    const pageVideos = videos.slice(start, end);
    tbody.innerHTML = "";
    if (!pageVideos || pageVideos.length === 0) {
      tbody.innerHTML = '<tr><td colspan="6" class="text-center">Belum ada video.</td></tr>';
      renderPagination(totalPages);
      return;
    }
    for (const video of pageVideos) {
      tbody.innerHTML += `
      <tr>
        <td class="px-4 py-2">${video.title || "-"}</td>
        <td class="px-4 py-2">${video.kelas || "-"}</td>
        <td class="px-4 py-2">${video.mapel || "-"}</td>
        <td class="px-4 py-2">${video.id_kursus || "-"}</td>
        <td class="px-4 py-2"><a href="${video.url}" class="text-blue-600 hover:underline" target="_blank">Lihat</a></td>
        <td class="px-4 py-2">
          <a href="/admin-video?edit=${video.id}" class="text-blue-600 hover:underline btn-edit-video" data-id="${video.id}">Edit</a>
          <button class="text-red-600 hover:underline btn-hapus-video ml-2" data-id="${video.id}">Hapus</button>
        </td>
      </tr>
      `;
    }
    renderPagination(totalPages);
  }

  function renderPagination(totalPages) {
    const container = document.getElementById("pagination");
    if (totalPages <= 1) { container.innerHTML = ""; return; }
    let html = '';
    html += `<button class="px-2 py-1 rounded bg-gray-200 mx-1" ${currentPage === 1 ? 'disabled' : ''} data-page="prev">&laquo; Prev</button>`;
    for (let i = 1; i <= totalPages; i++) {
      if (i === currentPage || (i <= 2) || (i > totalPages - 2) || (Math.abs(i - currentPage) <= 1)) {
        html += `<button class="px-2 py-1 rounded ${i === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-100'} mx-1" data-page="${i}">${i}</button>`;
      } else if (i === 3 && currentPage > 5) {
        html += '<span class="mx-1">...</span>';
      } else if (i === totalPages - 2 && currentPage < totalPages - 4) {
        html += '<span class="mx-1">...</span>';
      }
    }
    html += `<button class="px-2 py-1 rounded bg-gray-200 mx-1" ${currentPage === totalPages ? 'disabled' : ''} data-page="next">Next &raquo;</button>`;
    container.innerHTML = html;
    container.querySelectorAll('button[data-page]').forEach(btn => {
      btn.onclick = function() {
        let target = btn.getAttribute('data-page');
        if (target === 'prev') renderVideos(null, currentPage - 1);
        else if (target === 'next') renderVideos(null, currentPage + 1);
        else renderVideos(null, parseInt(target));
        // window.scrollTo({top: 0, behavior: 'smooth'}); // Hapus atau komentari baris ini
       };
    });
  }

  // Fetch dan render awal
async function fetchAndRenderVideos() {
  const { data, error } = await fetchVideos();
  const tbody = document.getElementById("video-list");
  if (error) {
    tbody.innerHTML = '<tr><td colspan="6" class="text-center text-red-600">Gagal memuat data video.</td></tr>';
    return;
  }
  allVideos = data || [];
  renderVideos(null, 1);
}

// Event search
// dan event tombol hapus/edit
// (tanpa subscription Supabase)
document.addEventListener("DOMContentLoaded", async () => {
  await fetchAndRenderVideos();
  document.getElementById("video-success-alert").classList.add("hidden");
  // Event delegation untuk tombol hapus
  document
    .getElementById("video-list")
    .addEventListener("click", function (e) {
      if (e.target.classList.contains("btn-hapus-video")) {
        document
          .getElementById("video-success-alert")
          .classList.add("hidden");
        const id = e.target.getAttribute("data-id");
        window.hapusVideo(id);
      }
      if (e.target.classList.contains("btn-edit-video")) {
        document
          .getElementById("video-success-alert")
          .classList.add("hidden");
      }
    });
  // Fitur search
  const searchInput = document.getElementById("search-input");
  searchInput.addEventListener("input", function () {
    const q = this.value.trim().toLowerCase();
    if (!q) {
      filteredVideos = null;
      renderVideos(null, 1);
      return;
    }
    filteredVideos = allVideos.filter(v =>
      (v.title || "").toLowerCase().includes(q) ||
      (v.kelas ? String(v.kelas).toLowerCase() : "").includes(q) ||
      (v.mapel || "").toLowerCase().includes(q)
    );
    renderVideos(filteredVideos, 1);
  });
});

// Fungsi hapus video via backend PHP
window.hapusVideo = async function (id) {
  const token = localStorage.getItem('adminAuthToken');
  const res = await fetch('https://iniedu.id/admin-video.php', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ action: 'delete', id })
  });
  const data = await res.json();
  if (data.success) {
    const alertBox = document.getElementById("video-success-alert");
    alertBox.textContent = "Video berhasil dihapus!";
    alertBox.classList.remove("hidden");
    // Hapus baris video dari tabel tanpa reload
    const row = document
      .querySelector(`button.btn-hapus-video[data-id="${id}"]`)
      .closest("tr");
    if (row) row.remove();
  } else {
    alert("Gagal menghapus video: " + (data.message || ''));
  }
};

</script>
